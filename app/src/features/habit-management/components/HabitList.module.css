/* HabitList Component Styles */

.habitList {
  display: flex;
  flex-direction: column;
  gap: 1.5rem;
  width: 100%;
  max-width: 100%;
}

/* Header */
.header {
  display: flex;
  justify-content: space-between;
  align-items: center;
  gap: 1rem;
}

.titleSection {
  display: flex;
  align-items: baseline;
  gap: 0.75rem;
}

.title {
  font-size: 1.5rem;
  font-weight: 700;
  color: var(--color-text-primary);
  margin: 0;
}

.count {
  font-size: 0.875rem;
  color: var(--color-text-tertiary);
  background: var(--color-background-muted);
  padding: 0.25rem 0.5rem;
  border-radius: 0.375rem;
}

.createButton {
  display: flex;
  align-items: center;
  gap: 0.5rem;
  padding: 0.75rem 1rem;
  background: var(--color-primary);
  color: white;
  border: none;
  border-radius: 0.5rem;
  font-weight: 500;
  cursor: pointer;
  transition: all 0.2s ease;
}

.createButton:hover {
  background: var(--color-primary-hover);
  transform: translateY(-1px);
}

.createButton:focus {
  outline: 2px solid var(--color-primary);
  outline-offset: 2px;
}

.icon {
  width: 1rem;
  height: 1rem;
}

/* Controls */
.controls {
  display: flex;
  flex-direction: column;
  gap: 1rem;
  padding: 1rem;
  background: var(--color-surface);
  border: 1px solid var(--color-border);
  border-radius: 0.75rem;
}

.searchSection {
  display: flex;
  gap: 1rem;
}

.searchBox {
  position: relative;
  flex: 1;
  max-width: 400px;
}

.searchIcon {
  position: absolute;
  left: 0.75rem;
  top: 50%;
  transform: translateY(-50%);
  width: 1rem;
  height: 1rem;
  color: var(--color-text-tertiary);
  pointer-events: none;
}

.searchInput {
  width: 100%;
  padding: 0.75rem 0.75rem 0.75rem 2.5rem;
  border: 1px solid var(--color-border);
  border-radius: 0.5rem;
  background: var(--color-background);
  color: var(--color-text-primary);
  font-size: 0.875rem;
  transition: border-color 0.2s ease;
}

.searchInput:focus {
  outline: none;
  border-color: var(--color-primary);
  box-shadow: 0 0 0 3px rgba(99, 102, 241, 0.1);
}

.searchInput::placeholder {
  color: var(--color-text-tertiary);
}

.filterSection {
  display: flex;
  align-items: center;
  gap: 0.75rem;
  flex-wrap: wrap;
}

.filterSelect,
.sortSelect {
  padding: 0.5rem 0.75rem;
  border: 1px solid var(--color-border);
  border-radius: 0.375rem;
  background: var(--color-background);
  color: var(--color-text-primary);
  font-size: 0.875rem;
  cursor: pointer;
  transition: border-color 0.2s ease;
}

.filterSelect:focus,
.sortSelect:focus {
  outline: none;
  border-color: var(--color-primary);
}

.clearFilters,
.clearFiltersButton {
  padding: 0.5rem 0.75rem;
  background: transparent;
  color: var(--color-text-secondary);
  border: 1px solid var(--color-border);
  border-radius: 0.375rem;
  font-size: 0.875rem;
  cursor: pointer;
  transition: all 0.2s ease;
}

.clearFilters:hover,
.clearFiltersButton:hover {
  background: var(--color-background-muted);
  color: var(--color-text-primary);
}

/* Content Grid */
.habitGrid {
  display: grid;
  gap: 1.5rem;
}

.habitGrid.grid {
  grid-template-columns: repeat(auto-fill, minmax(320px, 1fr));
}

.habitGrid.list {
  grid-template-columns: 1fr;
}

.habitCardItem {
  width: 100%;
}

/* Loading State */
.loading {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  gap: 1rem;
  padding: 3rem;
  color: var(--color-text-secondary);
}

.spinner {
  width: 2rem;
  height: 2rem;
  border: 2px solid var(--color-border);
  border-top: 2px solid var(--color-primary);
  border-radius: 50%;
  animation: spin 1s linear infinite;
}

@keyframes spin {
  0% { transform: rotate(0deg); }
  100% { transform: rotate(360deg); }
}

/* Error State */
.error {
  display: flex;
  flex-direction: column;
  align-items: center;
  gap: 0.5rem;
  padding: 3rem;
  text-align: center;
  color: var(--color-error);
  background: rgba(239, 68, 68, 0.05);
  border: 1px solid rgba(239, 68, 68, 0.2);
  border-radius: 0.75rem;
}

.error h3 {
  margin: 0;
  font-size: 1.125rem;
  font-weight: 600;
}

.error p {
  margin: 0;
  color: var(--color-text-secondary);
}

/* Empty States */
.emptyState {
  display: flex;
  justify-content: center;
  align-items: center;
  min-height: 300px;
  padding: 2rem;
}

.noHabits,
.noResults {
  display: flex;
  flex-direction: column;
  align-items: center;
  gap: 1rem;
  text-align: center;
  max-width: 400px;
}

.emptyIcon {
  width: 4rem;
  height: 4rem;
  color: var(--color-text-tertiary);
  opacity: 0.5;
}

.emptyIcon svg {
  width: 100%;
  height: 100%;
}

.noHabits h3,
.noResults h3 {
  font-size: 1.25rem;
  font-weight: 600;
  color: var(--color-text-primary);
  margin: 0;
}

.noHabits p,
.noResults p {
  color: var(--color-text-secondary);
  margin: 0;
  line-height: 1.5;
}

.createFirstButton {
  padding: 0.75rem 1.5rem;
  background: var(--color-primary);
  color: white;
  border: none;
  border-radius: 0.5rem;
  font-weight: 500;
  cursor: pointer;
  transition: all 0.2s ease;
}

.createFirstButton:hover {
  background: var(--color-primary-hover);
  transform: translateY(-1px);
}

.createFirstButton:focus {
  outline: 2px solid var(--color-primary);
  outline-offset: 2px;
}

/* Checkbox styling for Show Inactive toggle */
.checkboxLabel {
  display: flex;
  align-items: center;
  gap: 0.5rem;
  font-size: 0.875rem;
  color: var(--color-text-secondary);
  cursor: pointer;
  user-select: none;
  padding: 0.25rem 0.5rem;
  border-radius: 0.375rem;
  transition: background-color 0.2s ease;
}

.checkboxLabel:hover {
  background-color: var(--color-background-hover);
}

.checkboxLabel .checkbox {
  width: 1rem;
  height: 1rem;
  cursor: pointer;
}

.checkboxLabel span {
  font-weight: 500;
}

/* Dark mode adjustments */
@media (prefers-color-scheme: dark) {
  .controls {
    background: var(--color-surface-dark);
    border-color: var(--color-border-dark);
  }
  
  .searchInput,
  .filterSelect,
  .sortSelect {
    background: var(--color-background-dark);
    border-color: var(--color-border-dark);
    color: var(--color-text-primary-dark);
  }
  
  .searchInput::placeholder {
    color: var(--color-text-tertiary-dark);
  }
  
  .clearFilters,
  .clearFiltersButton {
    border-color: var(--color-border-dark);
    color: var(--color-text-secondary-dark);
  }
  
  .clearFilters:hover,
  .clearFiltersButton:hover {
    background: var(--color-background-muted-dark);
    color: var(--color-text-primary-dark);
  }
  
  .spinner {
    border-color: var(--color-border-dark);
    border-top-color: var(--color-primary);
  }
  
  .viewToggle {
    background: var(--color-background-dark);
    border-color: var(--color-border-dark);
  }
  
  .viewButton {
    color: var(--color-text-secondary-dark);
  }
  
  .viewButton:hover {
    background: var(--color-background-muted-dark);
    color: var(--color-text-primary-dark);
  }
}

/* Responsive design */
@media (max-width: 768px) {
  .header {
    flex-direction: column;
    align-items: stretch;
    gap: 1rem;
  }
  
  .titleSection {
    justify-content: space-between;
  }
  
  .controls {
    padding: 0.75rem;
  }
  
  .searchSection {
    flex-direction: column;
  }
  
  .searchBox {
    max-width: none;
  }
  
  .filterSection {
    justify-content: space-between;
  }
  
  .habitGrid.grid {
    grid-template-columns: 1fr;
  }
  
  .createButton {
    justify-content: center;
    width: 100%;
  }
  
  .headerActions {
    width: 100%;
    justify-content: space-between;
  }
  
  .viewToggle {
    padding: 0.125rem;
    gap: 0.125rem;
  }
  
  .viewButton {
    padding: 0.375rem;
  }
  
  .viewIcon {
    width: 0.875rem;
    height: 0.875rem;
  }
}

@media (max-width: 480px) {
  .habitList {
    gap: 1rem;
  }
  
  .title {
    font-size: 1.25rem;
  }
  
  .controls {
    padding: 0.5rem;
    gap: 0.75rem;
  }
  
  .filterSection {
    flex-direction: column;
    align-items: stretch;
  }
  
  .filterSelect,
  .sortSelect,
  .clearFilters {
    width: 100%;
  }
}

/* High contrast mode support */
@media (prefers-contrast: high) {
  .controls {
    border-width: 2px;
  }
  
  .searchInput,
  .filterSelect,
  .sortSelect {
    border-width: 2px;
  }
  
  .createButton,
  .createFirstButton {
    border: 2px solid transparent;
  }
}

/* Reduced motion support */
/* View Toggle Controls */
.headerActions {
  display: flex;
  align-items: center;
  gap: 0.75rem;
}

.viewToggle {
  display: flex;
  align-items: center;
  background: var(--color-background);
  border: 1px solid var(--color-border);
  border-radius: 0.5rem;
  padding: 0.25rem;
  gap: 0.25rem;
}

.viewButton {
  display: flex;
  align-items: center;
  justify-content: center;
  padding: 0.5rem;
  border: none;
  border-radius: 0.375rem;
  background: transparent;
  color: var(--color-text-secondary);
  cursor: pointer;
  transition: all 0.2s ease;
}

.viewButton:hover {
  background: var(--color-background-muted);
  color: var(--color-text-primary);
}

.viewButton.active {
  background: var(--color-primary);
  color: white;
}

.viewButton:focus {
  outline: 2px solid var(--color-primary);
  outline-offset: 2px;
}

.viewIcon {
  width: 1rem;
  height: 1rem;
}

@media (prefers-reduced-motion: reduce) {
  .spinner {
    animation: none;
  }
  
  .createButton,
  .createFirstButton {
    transition: none;
  }
  
  .createButton:hover,
  .createFirstButton:hover {
    transform: none;
  }
  
  .viewButton {
    transition: none;
  }
}